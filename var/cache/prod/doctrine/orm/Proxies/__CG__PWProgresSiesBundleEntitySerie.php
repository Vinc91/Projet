<?php

namespace Proxies\__CG__\PW\ProgresSiesBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Serie extends \PW\ProgresSiesBundle\Entity\Serie implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'id', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'genres', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'saisons', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'titre', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'image', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'user', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'date', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'maj', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'createur', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'nbSaisons', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'avancement'];
        }

        return ['__isInitialized__', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'id', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'genres', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'saisons', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'titre', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'image', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'user', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'date', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'maj', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'createur', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'nbSaisons', '' . "\0" . 'PW\\ProgresSiesBundle\\Entity\\Serie' . "\0" . 'avancement'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Serie $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateur($createur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateur', [$createur]);

        return parent::setCreateur($createur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateur', []);

        return parent::getCreateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbSaisons($nbSaisons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbSaisons', [$nbSaisons]);

        return parent::setNbSaisons($nbSaisons);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbSaisons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbSaisons', []);

        return parent::getNbSaisons();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvancement($avancement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvancement', [$avancement]);

        return parent::setAvancement($avancement);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvancement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvancement', []);

        return parent::getAvancement();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\PW\ProgresSiesBundle\Entity\Image $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function addGenre(\PW\ProgresSiesBundle\Entity\Genre $genre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGenre', [$genre]);

        return parent::addGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGenre(\PW\ProgresSiesBundle\Entity\Genre $genre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGenre', [$genre]);

        return parent::removeGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenres()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenres', []);

        return parent::getGenres();
    }

    /**
     * {@inheritDoc}
     */
    public function addSaison(\PW\ProgresSiesBundle\Entity\Saison $saison)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSaison', [$saison]);

        return parent::addSaison($saison);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSaison(\PW\ProgresSiesBundle\Entity\Saison $saison)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSaison', [$saison]);

        return parent::removeSaison($saison);
    }

    /**
     * {@inheritDoc}
     */
    public function getSaisons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSaisons', []);

        return parent::getSaisons();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvancementTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvancementTotal', []);

        return parent::setAvancementTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function searchNum($saisons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'searchNum', [$saisons]);

        return parent::searchNum($saisons);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaj()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaj', []);

        return parent::setMaj();
    }

    /**
     * {@inheritDoc}
     */
    public function getMaj()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaj', []);

        return parent::getMaj();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\PW\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

}
